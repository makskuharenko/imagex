<?php
/**
 * @file
 * Code for the Linux Homepage feature.
 */

include_once 'linux_landing_pages.features.inc';

/**
 * Implements hook_ctools_plugin_directory()
 */
function linux_landing_pages_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'ctools' && $plugin_type == 'content_types') {
    return 'plugins/' . $plugin_type;
  }
}

/**
 * Implements hook_entity_info_alter().
 */
function linux_landing_pages_entity_info_alter(&$entity_info) { 
  $entity_info['node']['view modes']['sidebar'] = array(
    'label' => t('Sidebar'),
    'custom settings' => FALSE,
  );
}
/**
 * Implements hook_node_insert().
 */
function linux_landing_pages_node_insert($node) { 
  if ($node->uuid == '1a77a768-bb9c-412a-b9c5-0e1eb0a326ba') {
    // We are going to set the homepage to the homepage node we imported
    // We first check the node by using the UUID
    // @TODO if this module gets repackaged and the UUID changes then this needs to be updated too!!!!
    $path = 'node/' . $node->nid;
    variable_set('site_frontpage', $path);
  }
  if (isset($node->url_alias) && is_array($node->url_alias)) {
    foreach ($node->url_alias as $alias) {
      $alias['source'] = 'node/' . $node->nid;
      path_save($alias);
    }
  }
  
  // We now need to iterate through the nodes and assign them to the menu item they should be under
  $uuids = &drupal_static(__FUNCTION__, linux_landing_pages_uuid_to_menu_link());
  if (!empty($uuids[$node->uuid])) {
    $menu_id = $uuids[$node->uuid];
    $mlid = db_select('menu_links', 'm')
      ->condition('options', '%' . db_like($menu_id) . '%', 'LIKE')
      ->fields('m', array('mlid'))
      ->execute()->fetchField();
    if (is_numeric($mlid)) {
      $link = menu_link_load($mlid);
      $link['link_path'] = 'node/' . $node->nid;
      menu_link_save($link);
      menu_cache_clear_all();
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter()
 */
function linux_landing_pages_form_views_exposed_form_alter(&$form, &$form_state) {
  $view = $form_state['view'];
  if ($view->name == 'home_page' && $view->current_display == 'panel_pane_1') {
    $form['#attached']['js'][] = drupal_get_path('module', 'linux_landing_pages') . '/js/landing_page.leftbar.js';
    $form['#attached']['js'][] = drupal_get_path('module', 'linux_landing_pages') . '/js/leftbar.jquery.js';
    $form['#attributes']['class'][] = 'js-leftbar-sort';
  }
}

/**
 * Implements hook_views_ajax_data_alter()
 */
function linux_landing_pages_views_ajax_data_alter(&$commands, $view) {
  // Adds a trigger event to views ajax calls so we can react to them
  if ($view->name == 'home_page' && $view->current_display == 'panel_pane_1') {
    foreach ($commands as $command) {
      if ($command['command'] == 'viewsScrollTop') {
        $selector = $command['selector'];
      }
    }
    $commands[] = array('command' => 'triggerDOMChange');
  }
}

/**
 * Implements hook_uuid_node_features_export_render_alter().
 */
function linux_landing_pages_uuid_node_features_export_render_alter(&$export, $node, $module) {
  $nid = db_select('node', 'n')->fields('n', array('nid'))->condition('uuid',$node->uuid)->execute()->fetchField();
  $paths = array();
  if (!empty($nid)) {
    $conditions = array('source' => 'node/' . $nid);
    $langcode = entity_language('node', $node);
    if ($langcode != LANGUAGE_NONE) {
      $conditions['language'] = $langcode;
    }
    $select = db_select('url_alias');
    foreach ($conditions as $field => $value) {
      $select->condition($field, $value);
    }
    $paths = $select
      ->fields('url_alias')
      ->execute()
      ->fetchAllAssoc('pid');
    if ($paths === FALSE) {
      $paths = array();
    }
  }
  $export->url_alias = $paths;
}

/**
 * Maps our UUID pages to a menu identifier so when our nodes are saved they can update the menu link
 */
function linux_landing_pages_uuid_to_menu_link() {
  return array (
    // Home Page
    '1a77a768-bb9c-412a-b9c5-0e1eb0a326ba' => NULL,
    // Tutorials
    '41eceaf9-1fc8-4a70-9780-24c99540d4c0' => 'menu-primary-menu_linux-tutorials',
    // Learn Linux
    'c3e9fa2b-a5b7-44a9-a095-b0426ef370ed' => 'menu-primary-menu_learn-linux',
    // Special Feature
    '8125d7c5-2083-4a99-a4b7-585ff1dd157a' => 'menu-primary-menu_special-feature',
    // Community Blogs
    '971c81fc-2fd8-4b6e-8b67-4214f23ef1b8' => 'menu-primary-menu_community-blogs',
    // News
    '9c3ac9f6-6eb2-4e3e-8378-be32d3cad171' => 'menu-primary-menu_linux-news',
    // Linux Humor
    'b7e3c5e9-26a7-48c2-8c0c-04d1351e0b1f' => 'menu-primary-menu_linux-humor',
    // Linux Answers
    'c7c9ea4e-c6c1-4fec-9822-62e2e404d82f' => 'menu-primary-menu_linux-answers',
    // Contests & Polls
    'de271999-04f9-4d83-98bb-6e5e4489cbf6' => 'menu-primary-menu_contests--polls',
    // Linux Foundation Blogs
    'f82c4447-883a-40fa-9777-f55b3293beff' => 'menu-primary-menu_linux-foundation-blogs',
    // Photos & Videos
    'bc3bb864-590a-4070-a47d-60e6c148f7b9' => 'menu-primary-menu_photos',
    // Events
    '66c01ed1-2ffd-47a1-8bed-62e19446734f' => 'menu-primary-menu_linux-events',
    // Documentation
    'e920a520-fa3a-4f93-97ff-10b075333ef9' => 'menu-primary-menu_documentation',
    // Man Pages
    '6382bf3d-f950-4dee-b875-fa5dc8e432a1' => 'menu-primary-menu_man-pages',
    // Whitepages
    'd3ba32f7-4d5b-4564-b6b5-375b0517d6c2' => 'menu-primary-menu_linux-whitepapers'
  );
}

/**
 * Implements hook_block_view_MODULE_DELTA_alter().
 * 
 * We need to wrap the block contents in a div other wise it just outputs a tags with no wrapper
 */
function linux_landing_pages_block_view_flickr_3_alter(&$block, $info) {
  $block['content'] = '<div class="content pagination-centered">' . $block['content'] . '</div>';
}
