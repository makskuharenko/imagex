<?php
/**
 * @file
 * CoverItLive integration for the Linux.com
 */
define('LINUX_COVERITLIVE_CACHE_KEY', 'linux_coveritlive_stream');

/**
 * Implements hook_ctools_plugin_directory().
 */
function linux_coveritlive_ctools_plugin_directory($module, $plugin_type) {
  if ($module == 'ctools' && $plugin_type == 'content_types') {
    return 'plugins/' . $plugin_type;
  }
}

/**
 * Implements hook_init().
 */
function linux_coveritlive_init() {
  // Any blocks with ajax on?
  if ($ajax_blocks = variable_get('linux_coveritlive_ajax_settings', array())) {
    drupal_add_js(drupal_get_path('module', 'linux_coveritlive') . '/js/linux_coveritlive-block-ajax.js', array('scope' => 'footer'));
    drupal_add_js(array(
      'linuxCoveritliveBlockAjax' => array(
        'blocks' => $ajax_blocks,
        'url' => url('linux-cil-refresh'),
      ),
    ), 'setting');
  }
}

/**
 * Implements hook_menu().
 */
function linux_coveritlive_menu() {
  $items = array();

  $items['admin/config/services/coveritlive'] = array(
    'title' => 'CoverItLive API Settings',
    'description' => 'CoverItLive API Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('linux_coveritlive_admin_settings_form'),
    'file' => 'includes/linux_coveritlive.admin.inc',
    'access arguments' => array('administer coveritlive'),
  );

  $items['linux-cil-refresh'] = array(
    'title' => 'CoverItLive refresh content',
    'page callback' => 'linux_coveritlive_render_block_ajax',
    'page arguments' => array(1, 2),
    'access arguments' => array('see coveritlive ajax refresh'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function linux_coveritlive_permission() {
  return array(
    'administer coveritlive' => array(
      'title' => t('Admin CoverItLive Settings'),
      'Description' => t('Configure the CoverItLive integration settings'),
    ),
    'see coveritlive ajax refresh' => array(
      'title' => t('See CoverItLive Ajax Refresh'),
      'Description' => t('Should user be able to see CoverItLive ajax refresh'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function linux_coveritlive_theme($existing, $type, $theme, $path) {
  return array(
    'linux_coveritlive_block' => array(
      'variables' => array('posts' => array(), 'conf' => array(), 'ajax_render' => FALSE),
      'template' => 'linux-coveritlive-block',
      'pattern' => 'linux_coveritlive_item__',
      'path' => $path . '/theme',
      'file' => 'linux_coveritlive.theme.inc'
    ),
    'linux_coveritlive_item' => array(
      'variables' => array('post' => array()),
      'template' => 'linux-coveritlive-item',
      'pattern' => 'linux_coveritlive_item__',
      'path' => $path . '/theme',
      'file' => 'linux_coveritlive.theme.inc'
    ),
  );
}

/**
 * Custom function for getting post stream from CoverItLive API.
 *
 * CoverItLive API is pinged with event/blog info from block settings
 * Results are cached only as a fallback if the CoverItLive API is down
 */
function linux_coveritlive_get_stream($block_settings = array()) {
  // Global API settings
  $api_url = variable_get('linux_coveritlive_api_url', 'https://api.coveritlive.com/remote/2/event/data');
  $api_key = variable_get('linux_coveritlive_api_key');

  // No APi key or block settings = jump ship
  if (empty($api_key) || empty($block_settings)) {
    return FALSE;
  }

  //vars
  $stream_key = $block_settings['linux_coveritlive_stream_key'];
  $stream_count = $block_settings['linux_coveritlive_item_count'] ? $block_settings['linux_coveritlive_item_count'] : 5;
  $cache_key = LINUX_COVERITLIVE_CACHE_KEY . '_' . $stream_key;

  // Construct query parameter.
  // see: http://www.coveritlive.com/index.php?option=com_content&task=view&id=281
  $data = array(
    'event_code' => $stream_key,
    'token' => $api_key,
    'item_count' => $stream_count,
  );

  // Fire off request.
  $response = drupal_http_request(url($api_url, array('query' => $data)));

  // If no response, possibly service outage, fallback to cache.
  if (empty($response->data)) {
    if ($cache = cache_get($cache_key)) {
      return $cache->data;
    }
  }

  // Convert the received data into an array.
  $result =  drupal_json_decode($response->data);

  // Checks for $result['err'] & display error message to admins.
  if ($result['result'] != 'success') {
    if (user_access('administer coveritlive')) {
      drupal_set_message(t('Problem with CoverItLive API call: @var', array('@var' => $result['message'])), 'error');
    }
    return FALSE;
  }

  // Return false if no data
  if (empty($result['data'])) {
    return FALSE;
  }

  $posts = $result['data']['event_items'];

  // Cache result for 24 hours in case of service outage.
  cache_set($cache_key, $posts, 'cache', time() + 86400);

  return $posts;
}

/**
 * Custom function for render CoverItLive blocks.
 */
function linux_coveritlive_render_block($conf) {
  $block = new stdClass();
  $block->title = t('CoverItLive Stream');
  $block->module = 'linux_coveritlive';
  $block->delta = linux_coveritlive_render_delta($conf);

  if ($posts = linux_coveritlive_get_stream($conf)) {
    $block->content = theme('linux_coveritlive_block', array('posts' => $posts, 'conf' => $conf));
  }
  else {
    $block->content = t('No posts available.');
  }

  return $block;
}

/**
 * Custom function for render CoverItLive blocks via ajax.
 */
function linux_coveritlive_render_block_ajax($stream_key, $count) {
  $conf = array(
    'linux_coveritlive_stream_key' => $stream_key,
    'linux_coveritlive_item_count' => $count,
  );
  $content  = t('No posts available.');

  // Get Posts & render direct if results
  if ($posts = linux_coveritlive_get_stream($conf)) {
    $content = theme('linux_coveritlive_block', array('posts' => $posts, 'conf' => $conf, 'ajax_render' => TRUE));
  }

  echo $content;
  die();
}

/**
 * Returns an ID for the block
 *
 * Hash ensures its unique, used for block delta too if style choosen
 */
function linux_coveritlive_render_delta($conf, $key = '') {
  return drupal_html_class('linux-coveritlive-stream-' . (!empty($key) ? $key : $conf['linux_coveritlive_stream_key']) . '-' . $conf['linux_coveritlive_ajax_hash']);
}