<?php

/**
 *
 */
function linux_page_compiler_permission() {
  return array(
    'administer linux page compiler' => array(
      'title' => t('Administer linux page compiler'),
      'description' => t('Configure sources for page compiler.'),
    ),
  );
}

/**
 * Implements hook_menu().
 *
 * Creates custom menu router to deliver compiled pages from
 * Linux source repositories. Utilizes argument wildcards to
 * handle various pages that link to a specific source file.
 */
function linux_page_compiler_menu() {

  // MAN pages.
  $items['manpage/%'] = array(
    'page callback' => 'linux_page_compiler_manpage',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
    'file' => 'linux_page_compiler.man.inc',
    'type' => MENU_CALLBACK,
  );

  // HOWTO pages.
  $items['howto/%'] = array(
    'page callback' => 'linux_page_compiler_howto',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
    'file' => 'linux_page_compiler.howto.inc',
    'type' => MENU_CALLBACK,
  );

  // Image loader.
  $items['page/image'] = array(
    'page callback' => 'linux_page_compiler_load_image',
    'access arguments' => array('access content'),
    'file' => 'linux_page_compiler.images.inc',
    'type' => MENU_CALLBACK,
  );

  // Administration pages.
  $items['admin/config/linux'] = array(
    'title' => 'Linux',
    'description' => 'Configure linux modules.',
    'position' => 'left',
    'weight' => -50,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('access administration pages'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
  $items['admin/config/linux/pages'] = array(
    'title' => 'Page compiler',
    'description' => 'Configure sources for page compiler.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('linux_page_compiler_admin_settings'),
    'access arguments' => array('administer linux page compiler'),
    'file' => 'linux_page_compiler.admin.inc',
  );

  return $items;
}

/**
 * Utility function; Loads the source page cache.
 */
function linux_page_compiler_load_cache() {
  return variable_get('linux_page_cache', array());
}

/**
 * Utility function; Cleans filename of special characters.
 */
function linux_page_compiler_clean_filename($name) {
  // TODO: Determine if any cleaning should happen to file names.
  return $name;
}

/**
 * Implements hook_search_api_item_type_info().
 */
function linux_page_compiler_search_api_item_type_info() {
  $types['man_page'] = array(
    'name' => t('MAN Page'),
    'datasource controller' => 'LinuxPageCompilerDataSourceController',
  );
  $types['howto_page'] = array(
    'name' => t('HOWTO Page'),
    'datasource controller' => 'LinuxPageCompilerDataSourceController',
  );
  return $types;
}